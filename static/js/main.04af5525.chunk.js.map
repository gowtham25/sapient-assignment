{"version":3,"sources":["Components/Filter/Filter.tsx","Components/RocketDetails/RocketDetails.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FilterContainer","styled","div","launchYear","Filter","setIsManuallyChanges","activeYear","setActiveYear","successfulLaunch","setSuccessfulLaunch","successfulLanding","setSuccessfulLanding","className","map","value","onClick","parseInt","key","RocketDetailsContainer","RocketDetails","rocketDetails","rocketValue","details","mission_name","flight_number","mission_id","launch_year","launch_landing","links","rocket","first_stage","cores","launch_success","mission_patch_small","src","alt","length","mVal","index","undefined","SpaceXComponentContainer","SpaceXComponent","useState","setRocketDetails","isLoading","setIsLoading","isManuallyChanges","useEffect","queryString","getParam","getRocketDetails","newUrl","window","location","protocol","host","console","log","history","pushState","path","str","fetch","then","response","json","data","queryParams","search","substring","JSON","parse","replace","decodeURIComponent","queryStringToObjectConverter","param","Boolean","hostname","match","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.04af5525.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst FilterContainer = styled.div`\n    background: #FFF;\n    width: 90%;\n    // border-radius: 10px;\n    height: 563px;\n    .filter-title {\n        text-align: left;\n        left: 6px;\n        position: relative;\n        font-weight: 700;\n    }\n    .filter-individual-container{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-bottom: 17px;\n        .filter-content-container {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            .item {\n                text-align: center;\n                margin: 5px 22px;\n                background: #c6e099;\n                padding: 6px;\n                border-radius: 7px;\n                width: 37px;\n                cursor: pointer;\n                color: #000;\n                font-size: 12px;\n                font-weight: 600;\n                &.active {\n                    background: #7bbb00;\n                }       \n            }\n        }\n        .title {\n            border-bottom: 1px solid #dedddb;\n            width: 70%;\n            padding-bottom: 3px;\n            margin-bottom: 6px;\n            font-size: 13px;\n        }\n    }\n`;\n\nconst launchYear = [2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020];\n\ninterface IFilterProps {\n    activeYear: string,\n    setActiveYear: (val: any) => void;\n    successfulLaunch: string;\n    setSuccessfulLaunch: (val: any) => void;\n    successfulLanding: string;\n    setSuccessfulLanding: (val: any) => void;\n    setIsManuallyChanges: (val: boolean) => void;\n}\n\nconst Filter: React.FC<IFilterProps> = ({ setIsManuallyChanges, activeYear, setActiveYear, successfulLaunch, setSuccessfulLaunch, successfulLanding, setSuccessfulLanding }) => {\n    return (\n        <FilterContainer>\n            <p className='filter-title'>Filter</p>\n            <div className='filter-individual-container'>\n                <div className='title'>\n                    Launch Year\n                </div>\n                {/* loop through the year to generate the element */}\n                <div className='filter-content-container'>\n                    {launchYear.map((value) => (<div onClick={() => { setIsManuallyChanges(true); setActiveYear(value) }} className={parseInt(activeYear) === value ? 'active item' : 'item'} key={value}>{value}</div>))}\n                </div>\n            </div>\n            <div className='filter-individual-container'>\n                <div className='title'>\n                    Successful Launch\n                </div>\n                <div className='filter-content-container'>\n                    <div onClick={() => { setIsManuallyChanges(true); setSuccessfulLaunch('true') }} className={successfulLaunch === 'true' ? 'active item' : 'item'}>True</div>\n                    <div onClick={() => { setIsManuallyChanges(true); setSuccessfulLaunch('false') }} className={successfulLaunch === 'false' ? 'active item' : 'item'}>False</div>\n                </div>\n            </div>\n            <div className='filter-individual-container'>\n                <div className='title'>\n                    Successful Landing\n                </div>\n                <div className='filter-content-container'>\n                    <div onClick={() => { setSuccessfulLanding('true') }} className={successfulLanding === 'true' ? 'active item' : 'item'}>True</div>\n                    <div onClick={() => { setSuccessfulLanding('false') }} className={successfulLanding === 'false' ? 'active item' : 'item'}>False</div>\n                </div>\n            </div>\n        </FilterContainer>\n    )\n}\n\nexport default Filter;","import React from 'react';\nimport styled from 'styled-components';\n\nconst RocketDetailsContainer = styled.div`\n    display: grid;\n    grid-gap: 15px;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    .individual-content-container {\n        padding: 10px 10px 24px 10px;\n        background: #FFF;\n        text-align: center;\n        img {\n            width: 256px;\n            min-width: 256px;\n            background: #f2f2f2;\n            min-height: 256px;\n            color: #000;\n            word-break: break-all;\n            font-size: 13px;\n        }\n        .individual-content-details-container {\n            .title {\n                text-align\n                margin-top: 7px;\n                color: #4c558f;\n                font-size: 13px;\n                font-weight: 800;\n            }\n            .details-row-container {\n                display: flex;\n                flex-direction: column;\n                margin-top: 15px;\n               .details-row{\n                    display: grid;\n                    grid-template-columns: 1fr 1fr;\n                    align-items: baseline;\n                    .row-label {\n                        font-weight: bold;\n                        font-family: fantasy;\n                        text-align: right;\n                    }\n                    .row-value{\n                        text-align: left;\n                        color: #bfc3d3;\n                        font-size: 13px;\n                        font-weight: bold;\n                        word-break: break-word;\n                        left: 10px;\n                        position: relative;\n                    }\n               } \n            }\n        }\n    }\n    @media screen and (max-width: 1024px) {\n        grid-template-columns: 1fr 1fr;\n    }\n    @media screen and (max-width: 700px) {\n\t\tgrid-template-columns: 1fr;\n\t}\n`;\n\ninterface IRocketDetailsProps {\n    rocketDetails: any;\n}\nconst RocketDetails: React.FC<IRocketDetailsProps> = ({ rocketDetails }) => {\n    return (\n        <RocketDetailsContainer>\n            {rocketDetails.map((rocketValue: any) => {\n                const { details = '', mission_name = '', flight_number = '', mission_id = [], launch_year = '', launch_landing, links = {}, rocket = {} } = rocketValue || {};\n                const { first_stage: { cores = [] } } = rocket || {};\n                const { launch_success } = cores[0]\n                const { mission_patch_small = '' } = links || {};\n                return (\n                    <div className='individual-content-container' key={flight_number}>\n                        <img src={mission_patch_small} alt={details || mission_name} />\n                        <div className='individual-content-details-container'>\n                            <div className='title'>{`${mission_name} #${flight_number}`}</div>\n                            <div className='details-row-container'>\n                                <div className='details-row'>\n                                    <div className='row-label'>Mission Id's:</div><div className='row-value'>\n                                        {mission_id && mission_id.length > 0 ? mission_id.map((mVal: string, index: number) => {\n                                            return <span className='id-list' key={index}>{`${mVal}, `}</span>\n                                        }) : '-'}\n                                    </div>\n                                </div>\n                                <div className='details-row'>\n                                    <div className='row-label'>Launch Year:</div><div className='row-value'>{launch_year}</div>\n                                </div>\n                                <div className='details-row'>\n                                    <div className='row-label'>Successful Launch:</div><div className='row-value'>{launch_success ? 'Yes' : 'No'}</div>\n                                </div>\n                                <div className='details-row'>\n                                    <div className='row-label'>Successful Land:</div><div className='row-value'>{launch_landing === undefined ? 'N/A' : launch_landing ? 'Yes' : 'No'}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n        </RocketDetailsContainer>\n    )\n}\n\nexport default RocketDetails;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Filter from './Components/Filter/Filter';\nimport RocketDetails from './Components/RocketDetails/RocketDetails';\n\nconst SpaceXComponentContainer = styled.div`\n\tbackground: #f2f2f2;\n\theader {\n\t\tfont-size: 23px;\n\t\tfont-weight: 600;\n\t\ttext-align: left;\n\t}\n\t.app-container {\n\t\theight: 93vh;\n    \toverflow: auto;\n\t\tdisplay: grid;\n\t\tgrid-column-gap: 15px;\n\t\tgrid-template-columns: 1fr 5fr;\n\t\t.filter-container {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\tbackground: #f2f2f2;\n\t\t\tpadding-top: 14px;\n\t\t}\n\t\t.content-container {\n            padding: 0 10px 24px 10px;\n            margin-top: 15px;\n            overflow: auto;\n\t\t\t.loading {\n                font-size: 16px;\n                font-family: fantasy;\n                font-weight: bold;\n                position: absolute;\n                text-align: center;\n                left: 50%;\n                top: 50%;\n                transform: translate(-50%);\n            }\n\t\t}\n\t}\n\tfooter {\n\t\tmargin-top:7px;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\ttext-align: center;\n\t\t.developer-name {\n\t\t\tfont-weight: 500;\n\t\t}\n\t}\n\t@media screen and (max-width: 700px) {\n\t\theader {\n\t\t\ttext-align:center;\n\t\t}\n\t\t.app-container {\n            grid-template-columns: 1fr;\n            .content-container {\n                overflow: visible;\n            }\n\t\t}\n\t}\n\t\n`;\n\nfunction SpaceXComponent() {\n\tconst [rocketDetails, setRocketDetails] = useState([]);\n\tconst [activeYear, setActiveYear] = useState();\n\tconst [successfulLaunch, setSuccessfulLaunch] = useState();\n\tconst [successfulLanding, setSuccessfulLanding] = useState();\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [isManuallyChanges, setIsManuallyChanges] = useState(true);\n\n\tuseEffect(() => {\n\t\tconst queryString = getParam(); //check url have querystring or not\n\t\tqueryString !== '?' ? getRocketDetails(queryString) : getRocketDetails('?limit=100');\n\t}, []);\n\n\tuseEffect(() => {   //generate Querystring when filter\n\t\tif (isManuallyChanges && (activeYear || successfulLaunch || successfulLanding)) {\n\t\t\tlet currentUrl = `/100`,\n\t\t\t\tqueryString = `?limit=100`;\n\n\t\t\tif (activeYear && activeYear !== ' ') {\n\t\t\t\tcurrentUrl += `/${activeYear}`;\n\t\t\t\tqueryString += `&launch_year=${activeYear}`;\n\t\t\t} else {\n\t\t\t\tcurrentUrl += `/ `;\n\t\t\t}\n\t\t\tif (successfulLaunch) {\n\t\t\t\tcurrentUrl += `/${successfulLaunch}`;\n\t\t\t\tqueryString += `&launch_success=${successfulLaunch}`;\n\t\t\t} else {\n\t\t\t\tcurrentUrl += `/ `;\n\t\t\t}\n\t\t\tif (successfulLanding) {\n\t\t\t\tcurrentUrl += `/${successfulLanding}`;\n\t\t\t\tqueryString += `&land_success=${successfulLanding}`;\n\t\t\t} else {\n\t\t\t\tcurrentUrl += `/ `;\n\t\t\t}\n\t\t\tgetRocketDetails(queryString);\n\t\t\tconst newUrl = window.location.protocol + \"//\" + window.location.host + '/sapient-assignment' + queryString;\n\t\t\tconsole.log(newUrl);\n\t\t\twindow.history.pushState({ path: newUrl }, '', newUrl);\n\t\t}\n\t}, [isManuallyChanges, activeYear, successfulLaunch, successfulLanding]);\n\n\tconst getRocketDetails = (str: string = '') => {\n\t\tsetIsLoading(true);\n\t\tfetch(`https://api.spacexdata.com/v3/launches${str}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tsetRocketDetails(data);\n\t\t\t\tsetIsLoading(false);\n\t\t\t})\n\t}\n\n\tconst queryStringToObjectConverter = () => {\n\t\tvar search = window.location.search.substring(1);\n\t\tif (search) {\n\t\t\treturn JSON.parse('{\"' + search.replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) });\n\t\t}\n\t\treturn {};\n\t}\n\n\tconst getParam = () => {    //If url have querystring set the values to respective state\n\t\tlet queryString = '?';\n\t\tconst queryParams: any = queryStringToObjectConverter() || {};\n\t\tconsole.log(queryParams);\n\t\tfor (let param in queryParams) {\n\t\t\tif (queryParams[param] && queryParams[param] !== ' ') {\n\t\t\t\tif (param === 'launch_year') {\n\t\t\t\t\tsetActiveYear(queryParams[param]);\n\t\t\t\t} else if (param === 'launch_success') {\n\t\t\t\t\tsetSuccessfulLaunch(queryParams[param]);\n\t\t\t\t} else if (param === 'land_success') {\n\t\t\t\t\tsetSuccessfulLanding(queryParams[param]);\n\t\t\t\t}\n\t\t\t\tsetIsManuallyChanges(false);\n\t\t\t\tqueryString += `&${param}=${queryParams[param]}`;\n\t\t\t}\n\t\t}\n\t\treturn queryString;\n\t}\n\n\n\n\treturn (\n\t\t<SpaceXComponentContainer>\n\t\t\t<div className=\"App\">\n\t\t\t\t<header>SpaceX Launch Programs</header>\n\t\t\t\t<div className='app-container'>\n\t\t\t\t\t<div className='filter-container'>\n\t\t\t\t\t\t<Filter\n\t\t\t\t\t\t\tactiveYear={activeYear}\n\t\t\t\t\t\t\tsetActiveYear={setActiveYear}\n\t\t\t\t\t\t\tsuccessfulLaunch={successfulLaunch}\n\t\t\t\t\t\t\tsetSuccessfulLaunch={setSuccessfulLaunch}\n\t\t\t\t\t\t\tsuccessfulLanding={successfulLanding}\n\t\t\t\t\t\t\tsetSuccessfulLanding={setSuccessfulLanding}\n\t\t\t\t\t\t\tsetIsManuallyChanges={setIsManuallyChanges}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='content-container'>\n\t\t\t\t\t\t{/* show loader message while the API is in process */}\n\t\t\t\t\t\t{isLoading && <p className='loading'>Loading Please Wait...</p>}\n\t\t\t\t\t\t{/* show all the rocket details in the cards after the API call is done */}\n\t\t\t\t\t\t{!isLoading && rocketDetails.length > 0 && <RocketDetails rocketDetails={rocketDetails} />}\n\t\t\t\t\t\t{/* show user that no data found if API call is done and API got empty response */}\n\t\t\t\t\t\t{!isLoading && !rocketDetails.length && <p className='loading'>No Missions found...</p>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<footer>Developed By: <span className='developer-name'>Gowtham V</span></footer>\n\t\t\t</div>\n\t\t</SpaceXComponentContainer>\n\t);\n}\n\nexport default SpaceXComponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}